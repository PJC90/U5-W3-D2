openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:3001
  description: Generated server url
paths:
  /users/{id}:
    get:
      tags:
      - user-controller
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
      - user-controller
      operationId: findIdUpdate
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
      - user-controller
      operationId: findIdDelete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
  /devices/{id}:
    get:
      tags:
      - device-controller
      operationId: findById_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
    put:
      tags:
      - device-controller
      operationId: findIdUpdate_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Device'
    delete:
      tags:
      - device-controller
      operationId: findIdDelete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
  /users:
    get:
      tags:
      - user-controller
      operationId: getUser
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
      - user-controller
      operationId: saveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponseDTO'
  /users/{id}/upload:
    post:
      tags:
      - user-controller
      operationId: uploadAvatar
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
              - avatar
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /devices:
    get:
      tags:
      - device-controller
      operationId: getDevice
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
    post:
      tags:
      - device-controller
      operationId: saveDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTOwithList'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeviceResponseDTO'
components:
  schemas:
    ErrorDTOwithList:
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        errorsList:
          type: array
          items:
            type: string
    ErrorDTO:
      type: object
      properties:
        message:
          type: string
        time:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        name:
          type: string
        lastName:
          type: string
        email:
          type: string
        avatar:
          type: string
    Device:
      type: object
      properties:
        id:
          type: integer
          format: int32
        statusType:
          type: string
          enum:
          - ASSEGNATO
          - DISMESSO
          - DISPONIBILE
          - MANUTENZIONE
        typologies:
          type: string
        user:
          $ref: '#/components/schemas/User'
    UserDTO:
      required:
      - email
      - lastName
      - name
      - username
      type: object
      properties:
        username:
          maxLength: 30
          minLength: 3
          type: string
        name:
          maxLength: 30
          minLength: 3
          type: string
        lastName:
          maxLength: 30
          minLength: 3
          type: string
        email:
          type: string
    UserResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
    DeviceDTO:
      required:
      - statusType
      - typologies
      - userId
      type: object
      properties:
        statusType:
          type: string
        typologies:
          type: string
        userId:
          type: integer
          format: int32
    DeviceResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
